{"header":[],"path":"ui\\vc-text.html","properties":[{"type":"object","description":"Object with usefull information","scope":"private","name":"_data"},{"type":"string","description":"Necessary property for a form","scope":"private","name":"_formelement"},{"type":"string","description":"Text provided by the user inside the element","scope":"private","name":"_initialText"},{"type":"object","description":"Object with references to frecuently queryied nodes","scope":"private","name":"_refs"},{"type":"Number","description":"Determines the height of the typeable area","name":"areaHeight"},{"type":"string","description":"Whether the user wants a counter or not","name":"counter"},{"type":"string","description":"Label for the element","name":"label"},{"type":"string","description":"Characters input limit","name":"maxlength"},{"type":"string","description":"Name to identify the element in a form","name":"name"},{"type":"string","description":"Placeholder for the user typing area","name":"placeholder"},{"type":"string","description":"Determines the status of the element (active, readonly, disabled)","name":"status"},{"type":"string","description":"Determines the type of the element (area, text, password)","name":"type"},{"type":"string","description":"Value of the element","name":"value"}],"methods":[{"description":"Returns an object with the absolute position of the cursor","name":"_getSelectionCoords","params":[],"return":{"type":"object"},"exceptions":[],"scope":"private"},{"description":"Returns the actual range of the selection","name":"_getSelectionRange","params":[],"return":{"type":"object"},"exceptions":[],"scope":"private"},{"description":"Called when typing, when the size has changed it manages the autoscrolling to keep the cursor visible","name":"_handleAutoScroll","params":[{"type":"object","description":"event","name":"e"}],"return":null,"exceptions":[],"scope":"private"},{"description":"Checks if the size is different from the horizontal scroll limit","name":"_hasDifferentHorizontalSize","params":[],"return":{"type":"boolean"},"exceptions":[],"scope":"private"},{"description":"Checks if the size is different from the vertical scroll limit","name":"_hasDifferentVerticalSize","params":[],"return":{"type":"boolean"},"exceptions":[],"scope":"private"},{"description":"Depending on the browser it handles the height change in a different way","name":"_refresh","params":[],"return":null,"exceptions":[],"scope":"private"},{"description":"Sets up all the necessary stuff for the element","name":"_setup","params":[],"return":null,"exceptions":[],"scope":"private"},{"description":"Created all nodes and events for all the types except the area","name":"_setupAsTextarea","params":[],"return":null,"exceptions":[],"scope":"private"},{"description":"Created all nodes and events for the area type element","name":"_setupAsTextarea","params":[],"return":null,"exceptions":[],"scope":"private"},{"description":"Fills the counter with the maxlength","name":"_setupCounter","params":[],"return":null,"exceptions":[],"scope":"private"},{"description":"Depending on the specified type we will determine the needed setup","name":"_setupForType","params":[],"return":null,"exceptions":[],"scope":"private"},{"description":"In case the user specified a text we will move it here","name":"_setupInitialText","params":[],"return":null,"exceptions":[],"scope":"private"},{"description":"Updates the counter with the current characters count left for typing","name":"_updateCounter","params":[],"return":null,"exceptions":[],"scope":"private"},{"description":"Updates the label node with the new label","name":"_updateLabel","params":[],"return":null,"exceptions":[],"scope":"private"},{"description":"Removes previous status and sets the new one","name":"_updateStatus","params":[{"type":"string","description":"Opcional, when passing a previous status we remove the class and attribute for to avoid multiple status at the same time","name":"oldVal"}],"return":null,"exceptions":[],"scope":"private"},{"description":"Returns a boolean whether the current value is already exceeding the maxlength or not","name":"_willExceedLength","params":[],"return":{"type":"boolean"},"exceptions":[],"scope":"private"},{"description":"Updates the value","name":"setValue","params":[{"type":"String","name":"value"}],"return":null,"exceptions":[],"scope":"private"}],"__style":"..\\style.css"}