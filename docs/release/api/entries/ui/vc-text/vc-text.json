{"header":[],"path":"ui\\vc-text\\vc-text.html","properties":[{"type":"String","description":"Necessary property for a form","scope":"private","name":"_formElement"},{"type":"Object","description":"Object with usefull information","scope":"private","name":"_misc"},{"type":"Object","description":"Object with references to frecuently queryied nodes","scope":"private","name":"_refs"},{"type":"Number","description":"Determines the height of the typeable area","name":"areaHeight"},{"type":"String","description":"Whether the user wants a counter or not","name":"counter"},{"type":"String","description":"Value of the element when the element is reseted, if will also be the value of the element if no value is provided","name":"default"},{"type":"String","description":"Toggles the disabled status of the element","name":"disabled"},{"type":"Boolean","description":"Space that occupies the button inside its parent container.","name":"inline"},{"type":"String","description":"Label for the element","name":"label"},{"type":"String","description":"Characters input limit","name":"maxlength"},{"type":"String","description":"Name to identify the element in a form","name":"name"},{"type":"String","description":"Placeholder for the user typing area","name":"placeholder"},{"type":"string","description":"Toggles the readonly status of the element","name":"readonly"},{"type":"String","description":"Determines the type of the element (area, text, password)","name":"type"},{"type":"String","description":"Value of the element","name":"value"}],"methods":[{"description":"Returns an object with the absolute position of the cursor","name":"_getSelectionCoords","params":[],"return":{"type":"Object"},"exceptions":[],"scope":"private"},{"description":"Returns the actual range of the selection","name":"_getSelectionRange","params":[],"return":{"type":"Object"},"exceptions":[],"scope":"private"},{"description":"Returns the proper value for the element","name":"_getValue","params":[],"return":{"type":"String"},"exceptions":[],"scope":"private"},{"description":"Returns the length of the value","name":"_getValueLength","params":[],"return":{"type":"Number"},"exceptions":[],"scope":"private"},{"description":"Called when typing, when the size has changed it manages the autoscrolling to keep the cursor visible","name":"_handleAutoScroll","params":[{"type":"Object","description":"event","name":"e"}],"return":null,"exceptions":[],"scope":"private"},{"description":"Checks if the size is different from the horizontal scroll limit","name":"_hasDifferentHorizontalSize","params":[],"return":{"type":"Boolean"},"exceptions":[],"scope":"private"},{"description":"Checks if the size is different from the vertical scroll limit","name":"_hasDifferentVerticalSize","params":[],"return":{"type":"Boolean"},"exceptions":[],"scope":"private"},{"description":"If a value has been provided by the user we set it for our element","name":"_initDefault","params":[],"return":null,"exceptions":[],"scope":"private"},{"description":"Sets the initial value depending if an innerText or a value has been provided","name":"_initValue","params":[],"return":null,"exceptions":[],"scope":"private"},{"description":"Places the caret at the end of the element","name":"_placeCaretAtEnd","params":[],"return":{"type":"Boolean"},"exceptions":[],"scope":"private"},{"description":"Depending on the browser it handles the height change in a different way","name":"_refresh","params":[],"return":null,"exceptions":[],"scope":"private"},{"description":"Triggered when the element is blured, if the typed value exceeds the max length it restores the previous valid innerHTML","name":"_saveAreaInnerHTML","params":[],"return":{"type":"String"},"exceptions":[],"scope":"private"},{"description":"Triggered when typing, it saves the innerHTML of the area while the user has not exceeded the max length","name":"_saveAreaInnerHTML","params":[],"return":{"type":"String"},"exceptions":[],"scope":"private"},{"description":"Sets up all the necessary stuff for the element","name":"_setup","params":[],"return":null,"exceptions":[],"scope":"private"},{"description":"Creates the keyboard events for the area","name":"_setupAreaEvents","params":[],"return":null,"exceptions":[],"scope":"private"},{"description":"Prepares the element to work as a custom textarea with custom scroll","name":"_setupAsCustomArea","params":[],"return":null,"exceptions":[],"scope":"private"},{"description":"Prepares the element to work as a native textarea for touch devices","name":"_setupAsNativeArea","params":[],"return":null,"exceptions":[],"scope":"private"},{"description":"Created all nodes and events for the area type element","name":"_setupAsTextarea","params":[],"return":null,"exceptions":[],"scope":"private"},{"description":"Created all nodes and events for all the types except the area","name":"_setupAsTextarea","params":[],"return":null,"exceptions":[],"scope":"private"},{"description":"Fills the counter with the maxlength","name":"_setupCounter","params":[],"return":null,"exceptions":[],"scope":"private"},{"description":"Depending on the specified type we will determine the needed setup","name":"_setupForType","params":[],"return":null,"exceptions":[],"scope":"private"},{"description":"Creates references for relevant nodes","name":"_setupRefs","params":[],"return":null,"exceptions":[],"scope":"private"},{"description":"Creates the touch blur","name":"_setupTouchBlur","params":[],"return":{"type":"String"},"exceptions":[],"scope":"private"},{"description":"Updates the counter with the current characters count left for typing","name":"_updateCounter","params":[],"return":null,"exceptions":[],"scope":"private"},{"description":"Updates disabled status","name":"_updateDisabled","params":[],"return":null,"exceptions":[],"scope":"private"},{"description":"Updates the label node with the new label","name":"_updateLabel","params":[],"return":null,"exceptions":[],"scope":"private"},{"description":"Updates readonly status","name":"_updateReadOnly","params":[],"return":null,"exceptions":[],"scope":"private"},{"description":"Updates the value","name":"_updateValue","params":[{"type":"String","name":"value"}],"return":null,"exceptions":[],"scope":"private"},{"description":"Returns a boolean whether the current value is already exceeding the maxlength or not","name":"_valueExceedsLength","params":[],"return":{"type":"Boolean"},"exceptions":[],"scope":"private"},{"description":"Empties the value","name":"clear","params":[],"return":null,"exceptions":[]},{"description":"Resets the value of the element to the default one, if no default is provided then empties the value","name":"reset","params":[],"return":null,"exceptions":[]}]}