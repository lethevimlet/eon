{"header":[],"path":"ui\\vc-combobox\\vc-combobox.html","properties":[{"type":"string","description":"Necessary property for a form","scope":"private","name":"_formElement"},{"type":"Object","description":"Object with useful information","scope":"private","name":"_misc"},{"type":"object","description":"Object with references to relevant element nodes","name":"_refs"},{"type":"String","description":"Value of the element when the element is reseted, if will also be the value of the element if no value is provided","name":"default"},{"type":"String","description":"Toggles the disabled status of the element","name":"disabled"},{"type":"string","description":"Property that will be used to get the displayValue in case a store has been provided","name":"displayProperty"},{"type":"string","description":"The displayValue of the item","name":"displayValue"},{"type":"string","description":"Whether the input will be enabled to filter the dropdown options","name":"filter"},{"type":"Boolean","description":"Space that occupies the button inside its parent container.","name":"inline"},{"type":"string","description":"Sets the placeholder for the input","name":"label"},{"type":"string","description":"Name of the combobox","name":"name"},{"type":"string","description":"Sets the placeholder for the input","name":"placeholder"},{"type":"string","description":"Toggles the readonly status of the element","name":"readonly"},{"type":"string","description":"The value of the dropdown","name":"value"}],"htmlAttributes":[],"methods":[{"description":"Assigns the dropdown's width and position relative to the datebox","name":"_assignDropdownStyle","params":[],"return":null,"exceptions":[],"scope":"private"},{"description":"Takes the value of the input and filters the dropdown items","name":"_filter","params":[],"return":null,"exceptions":[],"scope":"private"},{"description":"Hides matching error on the dropdown","name":"_hideMatchingError","params":[],"return":null,"exceptions":[],"scope":"private"},{"description":"If a value has been provided by the user we set it for our element","name":"_initDefault","params":[],"return":null,"exceptions":[],"scope":"private"},{"description":"Sets the initial value depending if an item with the provided value exists","name":"_initValue","params":[],"return":null,"exceptions":[],"scope":"private"},{"description":"Prepares the dropdown to hold the items","name":"_setupDropdown","params":[],"return":null,"exceptions":[]},{"description":"Creates the touch blur","name":"_setupMatchingErrorItem","params":[],"return":null,"exceptions":[],"scope":"private"},{"description":"Sets up the listener to the click events","name":"_setupMisc","params":[],"return":null,"exceptions":[]},{"description":"Sets up basic properties for the data object","name":"_setupOverlay","params":[],"return":null,"exceptions":[],"scope":"private"},{"description":"Creates the touch blur","name":"_setupTouchBlur","params":[],"return":{"type":"String"},"exceptions":[],"scope":"private"},{"description":"Depending on user specifications we will prepare the element","name":"_setupType","params":[],"return":null,"exceptions":[]},{"description":"Shows matching error on the dropdown","name":"_showMatchingError","params":[],"return":null,"exceptions":[],"scope":"private"},{"description":"Shows all the previously filtered items","name":"_undoFilter","params":[],"return":null,"exceptions":[],"scope":"private"},{"description":"Updates disabled status","name":"_updateDisabled","params":[],"return":null,"exceptions":[],"scope":"private"},{"description":"Updates the label node with the new label","name":"_updateLabel","params":[],"return":null,"exceptions":[],"scope":"private"},{"description":"Updates readonly status","name":"_updateReadOnly","params":[],"return":null,"exceptions":[],"scope":"private"},{"description":"Updates the value","name":"_updateValue","params":[],"return":null,"exceptions":[],"scope":"private"},{"description":"Adding a new option item programmaticaly","name":"addItem","params":[{"type":"object","name":"item"}],"return":null,"exceptions":[]},{"description":"Empties the value","name":"clear","params":[],"return":null,"exceptions":[]},{"description":"Expands the items dropdown","name":"expand","params":[],"return":null,"exceptions":[]},{"description":"Resets the value of the element to the default one, if no default is provided then empties the value","name":"reset","params":[],"return":null,"exceptions":[]},{"description":"Sets the item as the inputs value and hide the options div","name":"select","params":[{"type":"object","name":"item"}],"return":null,"exceptions":[]},{"description":"Here we will setup the animations for the input","name":"setupAnimations","params":[],"return":null,"exceptions":[]},{"description":"Takes a single item, adds its events and assigns its properties","name":"setupItem","params":[],"return":null,"exceptions":[]},{"description":"Takes all the items and moves them","name":"setupItems","params":[],"return":null,"exceptions":[]},{"description":"Creates some fast access elements so that theres no need for calling the QuerySelector all the time.","name":"setupRefs","params":[],"return":null,"exceptions":[]},{"description":"Here we setup our items depending on the store data","name":"setupStoreItems","params":[],"return":null,"exceptions":[]},{"description":"Sets up the listener to the click events","name":"setupTriggers","params":[],"return":null,"exceptions":[]},{"description":"Shrinks the items dropdown","name":"shrink","params":[],"return":null,"exceptions":[]},{"description":"Toggles the dropdown when clicking on the dropdown button","name":"toggleDropdown","params":[],"return":null,"exceptions":[]}]}